% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ridgeregression.R
\docType{class}
\name{ridgereg-class}
\alias{ridgereg-class}
\alias{ridgereg}
\title{Reference Class for Ridge Regression}
\arguments{
\item{formula}{A model formula of the form `y ~ x1 + x2 + ...`, specifying
the response and predictor variables for ridge regression.}

\item{dataset}{A data frame containing the variables referenced in the formula.}

\item{lambda}{A non-negative numeric value indicating the ridge penalty.
Larger values of `lambda` impose stronger shrinkage on the coefficients.}

\item{testdata}{Optional. A data frame containing the same predictor variables
used in the model formula. If `NULL`, the fitted values from the training
data are returned.}
}
\value{
The method does not return a value directly. Instead, it initializes the
fields of the reference class object, including:
\itemize{
  \item \code{beta_ridge}: Estimated ridge coefficients
  \item \code{y_hat}: Fitted values
  \item \code{mean_train}: Mean of each standardized predictor
  \item \code{sd_train}: Standard deviation of each standardized predictor
  \item \code{data_name}: Name of the dataset used
}

A numeric vector of predicted response values.

A named numeric vector containing the coefficient estimates.
}
\description{
Holds the data and methods for a ridge regression model.

Initializes a `ridgereg` object by fitting a ridge regression model using
the provided formula, dataset, and regularization parameter `lambda`.
Standardization is applied to all covariates except the intercept, and the
ridge regression coefficients are computed using the closed-form solution:
\deqn{\hat{\beta}_{ridge} = (X^{T}X + \lambda I)^{-1}X^{T}y}

Displays a formatted summary of the fitted `ridgereg` model, similar to the
output of `print.lm()`. The printed output includes the model call and the
estimated ridge regression coefficients.

Generates predictions from a fitted `ridgereg` model. If no `testdata` is
supplied, the method returns the fitted values from the training data. When
new data is provided, the function standardizes the covariates using the
training means and standard deviations before computing predictions.

Extracts the ridge regression coefficients from the fitted `ridgereg` model.
}
\details{
The method constructs the design matrix using `model.matrix()`, extracts the
response vector, standardizes the predictor variables (excluding the intercept),
and computes ridge regression coefficients. The fitted values, along with
scaling parameters, are stored in the object for later prediction.
}
\section{Fields}{

\describe{
\item{\code{formula}}{The model formula.}

\item{\code{beta_ridge}}{The calculated ridge regression coefficients.}

\item{\code{y_hat}}{The fitted values (y_hat) for the training data.}

\item{\code{mean_train}}{The mean value of train dataset.}

\item{\code{sd_train}}{The standard deviation value of train dataset.}

\item{\code{data_name}}{The name of the input data frame.}
}}


\examples{
\dontrun{
data(iris)
model <- ridgereg$new(Sepal.Length ~ Sepal.Width + Petal.Length, iris, 1)
model$print()
}

\dontrun{
data(iris)
model <- ridgereg$new(Sepal.Length ~ Sepal.Width + Petal.Length, iris, 0.6)

# fitted values
model$predict()

}
\dontrun{
data(iris)
model <- ridgereg$new(Sepal.Length ~ Sepal.Width + Petal.Length, iris, 1)
model$coef()
}

}
